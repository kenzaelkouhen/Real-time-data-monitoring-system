metricbeat.config:
  modules:
    path: ${path.config}/modules.d/*.yml
    # Reload module configs as they change:
    reload.enabled: false

metricbeat.autodiscover:
  providers:
    - type: docker
      hints.enabled: true

metricbeat.modules:
- module: docker
  metricsets:
    - "container"
    - "cpu"
    - "diskio"
    - "healthcheck"
    - "info"
    #- "image"
    - "memory"
    - "network"
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s
  enabled: true

- module: jolokia
  metricsets: ["jmx"]
  period: 10s
  hosts: ["kafka:8778"]
  namespace: "kafka-metrics"
  # path: "/jolokia/?ignoreErrors=true&canonicalNaming=false"
  # username: "user"
  # password: "secret"
  jmx.mappings:
    - mbean: 'kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic=*'
      attributes:
        - attr: Count
          field: BytesInPersec.count
    #- mbean: 'java.lang:type=Memory'
    #  attributes:
    #    - attr: HeapMemoryUsage
    #      field: memory.heap_usage
    #    - attr: NonHeapMemoryUsage
    #      field: memory.non_heap_usage
    # GC Metrics - this depends on what is available on your JVM
    #- mbean: 'java.lang:type=GarbageCollector,name=ConcurrentMarkSweep'
    #  attributes:
    #    - attr: CollectionTime
    #      field: gc.cms_collection_time
    #    - attr: CollectionCount
    #      field: gc.cms_collection_count
  jmx.application:
  jmx.instance:

- module: kafka
  metricsets: ["consumergroup", "partition"]
  period: 10s
  hosts: ["kafka:9092"]
  enabled: true

processors:
  - add_cloud_metadata: ~

output.elasticsearch:
  hosts: '${ELASTICSEARCH_HOSTS:elasticsearch:9200}'
  username: '${ELASTICSEARCH_USERNAME:}'
  password: '${ELASTICSEARCH_PASSWORD:}'
