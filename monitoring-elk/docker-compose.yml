

#docker compose for elastic and Kibana -> cambia el Kafka, zookeeper y toda la parte del ELK
# se dejan todos los otros contenedores para no tener que volver a instalarlos y para monitorizarlos


version: '3.2'

services:

     
  #Services to monitor

  # Route Calculator
  route_calculator:
    image: ghcr.io/jandion/logisticdeliversimulator/route_calculator:latest
    ports:
      - "7501:7501"


  # OSRM
  osrm:
    image: ghcr.io/jandion/logisticdeliversimulator/osrm:latest 
    ports:
      - "5000:5000"


  # Kafka
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      ADV_HOST: kafka
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_ENABLE_KRAFT: no.
    depends_on:
      - zookeeper
      


  # Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181




  # MongoDB
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    
     
       
      

  # MongoDB Express
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://host.docker.internal:27017/
   


  # Simulator
  simulator:
    image: ghcr.io/jandion/logisticdeliversimulator/simulator:latest 
    ports:
      - "7500:7500"
   


  # Plan Selector UI
  planSelectorUi:
    image: ghcr.io/jandion/logisticdeliversimulator/planselectorui:latest 
    ports:
      - "5003:5003"
  


  # ELK and Kibana

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    ports:
      - 9200:9200
      - 9300:9300
    environment: 
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - ./esdata01/:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/local/share/elasticsearch.yml:ro,Z
    networks: 
      - logging-network
    depends_on:
      - kafka
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    ports:
      - 5601:5601
    networks: 
      - logging-network

     
  

volumes:
  esdata01:
    driver: local
  metricbeat-data01:
    driver: local


networks: 
   logging-network:
     driver: bridge
 
 
  
  
