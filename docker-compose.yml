

version: '3.2'
# docker compose file

services:

# Grafana:
  grafana:
    image: grafana/grafana:7.0.6
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
     - prometheus
     - cadvisor 

 # Prometheus and exporters

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

    depends_on:
      - cadvisor

    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080

    volumes:

      - /:/rootfs:ro

      - /var/run/docker.sock:/var/run/docker.sock:rw

      - /sys:/sys:ro

      - /var/lib/docker:/var/lib/docker:ro

    privileged: true




  # Route Calculator
  route_calculator:
    image: ghcr.io/jandion/logisticdeliversimulator/route_calculator:latest
    ports:
      - "7501:7501"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # OSRM
  osrm:
    image: ghcr.io/jandion/logisticdeliversimulator/osrm:latest 
    ports:
      - "5000:5000"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # Kafka
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      ADV_HOST: kafka
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
    depends_on:
      - zookeeper
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8082:8082"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # MongoDB
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # MongoDB Express
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # Simulator
  simulator:
    image: ghcr.io/jandion/logisticdeliversimulator/simulator:latest 
    ports:
      - "7500:7500"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


  # Plan Selector UI
  planSelectorUi:
    image: ghcr.io/jandion/logisticdeliversimulator/planselectorui:latest 
    ports:
      - "5003:5003"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://host.docker.internal:12201"


 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment: 
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks: 
      - logging-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.1.1
    depends_on: 
      - elasticsearch
    ports:
      - 12201:12201/udp
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro 
    networks:
      - logging-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.1
    depends_on:
      - logstash
    ports: 
      - 5601:5601
    networks: 
      - logging-network


 networks: 
  logging-network:
    driver: bridge
 

  
  
